// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package document

import (
	"github.com/crazyfrankie/voidx/internal/document/handler"
	"github.com/crazyfrankie/voidx/internal/document/repository"
	"github.com/crazyfrankie/voidx/internal/document/repository/dao"
	"github.com/crazyfrankie/voidx/internal/document/service"
	"github.com/crazyfrankie/voidx/internal/document/task"
	"github.com/google/wire"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitDocumentModule(db *gorm.DB) *DocumentModule {
	documentDao := dao.NewDocumentDao(db)
	documentRepo := repository.NewDocumentRepo(documentDao)
	documentProducer := InitProducer()
	documentService := service.NewDocumentService(documentRepo, documentProducer)
	documentHandler := handler.NewDocumentHandler(documentService)
	documentModule := &DocumentModule{
		Handler: documentHandler,
	}
	return documentModule
}

// wire.go:

type Handler = handler.DocumentHandler

type DocumentModule struct {
	Handler *Handler
}

var DocumentSet = wire.NewSet(dao.NewDocumentDao, repository.NewDocumentRepo, service.NewDocumentService, handler.NewDocumentHandler)

func InitProducer() *task.DocumentProducer {
	producer, err := task.NewDocumentProducer([]string{})
	if err != nil {
		panic(err)
	}

	return producer
}
