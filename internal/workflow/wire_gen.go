// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package workflow

import (
	"github.com/crazyfrankie/voidx/internal/core/tools/builtin_tools/providers"
	"github.com/crazyfrankie/voidx/internal/workflow/handler"
	"github.com/crazyfrankie/voidx/internal/workflow/repository"
	"github.com/crazyfrankie/voidx/internal/workflow/repository/dao"
	"github.com/crazyfrankie/voidx/internal/workflow/service"
	"github.com/google/wire"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitWorkflowModule(db *gorm.DB, builtinProvider *providers.BuiltinProviderManager) *WorkflowModule {
	workflowDao := dao.NewWorkflowDao(db)
	workflowRepo := repository.NewWorkflowRepo(workflowDao)
	workflowService := service.NewWorkflowService(workflowRepo, builtinProvider)
	workflowHandler := handler.NewWorkflowHandler(workflowService)
	workflowModule := &WorkflowModule{
		Handler: workflowHandler,
		Service: workflowService,
	}
	return workflowModule
}

// wire.go:

type Handler = handler.WorkflowHandler

type Service = service.WorkflowService

type WorkflowModule struct {
	Handler *Handler
	Service *Service
}

var ProviderSet = wire.NewSet(dao.NewWorkflowDao, repository.NewWorkflowRepo, service.NewWorkflowService, handler.NewWorkflowHandler)
