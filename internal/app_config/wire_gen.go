// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app_config

import (
	"github.com/crazyfrankie/voidx/internal/app_config/repository"
	"github.com/crazyfrankie/voidx/internal/app_config/repository/dao"
	"github.com/crazyfrankie/voidx/internal/app_config/service"
	"github.com/crazyfrankie/voidx/internal/core/llm"
	providers2 "github.com/crazyfrankie/voidx/internal/core/tools/api_tools/providers"
	"github.com/crazyfrankie/voidx/internal/core/tools/builtin_tools/providers"
	"github.com/google/wire"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitAppConfigModule(db *gorm.DB, llmMgr *llm.LanguageModelManager, builtinProvider *providers.BuiltinProviderManager, apiProvider *providers2.APIProviderManager) *AppConfigModule {
	appConfigDao := dao.NewAppConfigDao(db)
	appConfigRepo := repository.NewAppConfigRepo(appConfigDao)
	appConfigService := service.NewAppConfigService(appConfigRepo, llmMgr, builtinProvider, apiProvider)
	appConfigModule := &AppConfigModule{
		Service: appConfigService,
	}
	return appConfigModule
}

// wire.go:

type Service = service.AppConfigService

type AppConfigModule struct {
	Service *Service
}

var ProviderSet = wire.NewSet(dao.NewAppConfigDao, repository.NewAppConfigRepo, service.NewAppConfigService)
