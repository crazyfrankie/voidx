// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wechat

import (
	"github.com/crazyfrankie/voidx/internal/app_config"
	"github.com/crazyfrankie/voidx/internal/conversation"
	"github.com/crazyfrankie/voidx/internal/core/agent"
	"github.com/crazyfrankie/voidx/internal/core/memory"
	"github.com/crazyfrankie/voidx/internal/llm"
	"github.com/crazyfrankie/voidx/internal/retriever"
	"github.com/crazyfrankie/voidx/internal/wechat/handler"
	"github.com/crazyfrankie/voidx/internal/wechat/repository"
	"github.com/crazyfrankie/voidx/internal/wechat/repository/dao"
	"github.com/crazyfrankie/voidx/internal/wechat/service"
	"github.com/silenceper/wechat/v2"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitWechatModule(db *gorm.DB, wec *wechat.Wechat, retrieval *retriever.RetrieverModule, appConfigSvc *app_config.AppConfigModule, conversationSvc *conversation.ConversationModule, llmSvc *llm.LLMModule, agentService *agent.Service, tokenBufMem *memory.TokenBufferMemory) *WechatModule {
	wechatDao := dao.NewWechatDao(db)
	wechatRepository := repository.NewWechatRepository(wechatDao)
	retrievalService := retrieval.Service
	appConfigService := appConfigSvc.Service
	conversationService := conversationSvc.Service
	llmService := llmSvc.Service
	wechatService := service.NewWechatService(wec, wechatRepository, retrievalService, appConfigService, conversationService, llmService, tokenBufMem, agentService)
	wechatHandler := handler.NewWechatHandler(wechatService)
	wechatModule := &WechatModule{
		Handler: wechatHandler,
	}
	return wechatModule
}

// wire.go:

type Handler = handler.WechatHandler

type WechatModule struct {
	Handler *Handler
}
