// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"github.com/crazyfrankie/voidx/internal/app/handler"
	"github.com/crazyfrankie/voidx/internal/app/repository"
	"github.com/crazyfrankie/voidx/internal/app/repository/dao"
	"github.com/crazyfrankie/voidx/internal/app/service"
	"github.com/crazyfrankie/voidx/internal/core/llm"
	llm2 "github.com/crazyfrankie/voidx/internal/llm"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitAppModule(db *gorm.DB, llmCore *llm.LanguageModelManager, llmModule *llm2.LLMModule) *AppModule {
	appDao := dao.NewAppDao(db)
	appRepo := repository.NewAppRepo(appDao)
	llmService := llmModule.Service
	appService := service.NewAppService(appRepo, llmCore, llmService)
	appHandler := handler.NewAppHandler(appService)
	appModule := &AppModule{
		Handler: appHandler,
	}
	return appModule
}

// wire.go:

type Handler = handler.AppHandler

type AppModule struct {
	Handler *Handler
}
