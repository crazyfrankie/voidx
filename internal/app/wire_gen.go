// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"context"
	"github.com/crazyfrankie/voidx/internal/app/handler"
	"github.com/crazyfrankie/voidx/internal/app/repository"
	"github.com/crazyfrankie/voidx/internal/app/repository/dao"
	"github.com/crazyfrankie/voidx/internal/app/service"
	"github.com/crazyfrankie/voidx/internal/app_config"
	"github.com/crazyfrankie/voidx/internal/conversation"
	"github.com/crazyfrankie/voidx/internal/core/agent"
	"github.com/crazyfrankie/voidx/internal/core/llm"
	"github.com/crazyfrankie/voidx/internal/core/llm/entities"
	"github.com/crazyfrankie/voidx/internal/core/memory"
	"github.com/crazyfrankie/voidx/internal/core/tools/api_tools/providers"
	providers2 "github.com/crazyfrankie/voidx/internal/core/tools/builtin_tools/providers"
	"github.com/crazyfrankie/voidx/internal/retriever"
	"github.com/crazyfrankie/voidx/internal/upload"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitAppModule(db *gorm.DB, memory2 *memory.TokenBufferMemory, llmCore *llm.LanguageModelManager, appConfig *app_config.AppConfigModule, agentSvc *agent.AgentQueueManagerFactory, ossSvc *upload.UploadModule, retrieverSvc *retriever.RetrieverModule, apiProvider *providers.APIProviderManager, builtinProvider *providers2.BuiltinProviderManager, convers *conversation.ConversationModule) *AppModule {
	appDao := dao.NewAppDao(db)
	appRepo := repository.NewAppRepo(appDao)
	appConfigService := appConfig.Service
	conversationService := convers.Service
	retrievalService := retrieverSvc.Service
	ossService := ossSvc.Service
	baseLanguageModel := InitModel(llmCore)
	appService := service.NewAppService(appRepo, appConfigService, conversationService, retrievalService, ossService, apiProvider, builtinProvider, agentSvc, llmCore, memory2, baseLanguageModel)
	appHandler := handler.NewAppHandler(appService, appConfigService)
	appModule := &AppModule{
		Handler: appHandler,
		Service: appService,
	}
	return appModule
}

// wire.go:

type Handler = handler.AppHandler

type Service = service.AppService

type AppModule struct {
	Handler *Handler
	Service *Service
}

func InitModel(llmManager *llm.LanguageModelManager) entities.BaseLanguageModel {
	model, err := llmManager.CreateModel(context.Background(), "tongyi", "qwen-max", map[string]any{
		"base_url": "https://dashscope.aliyuncs.com/compatible-mode/v1",
	})
	if err != nil {
		panic(err)
	}

	return model
}
